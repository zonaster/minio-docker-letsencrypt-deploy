version: '3.7'

# Settings and configurations that are common for all minio{1...4} containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-06-30T20-58-09Z
  command: server http://minio{1...4}/data{1...2} --console-address ":9001"
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
    MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASS:-minio123}
    MINIO_BROWSER_REDIRECT_URL: https://${FQDN}

  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through default port 9000.
services:
  minio1:
    <<: *minio-common
    hostname: minio1
    container_name: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    container_name: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    container_name: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    container_name: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2

  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/conf.d:/etc/nginx/templates:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    environment:
      - NGINX_HOST=${FQDN}
    ports:
      - "443:443"
      - "9000:9000"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
      - certbot
    restart: always

  certbot:
    image: certbot/certbot
    ports:
      - "80:80"
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    command: certonly --standalone --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email -d ${FQDN}

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
  certbot-etc:
  certbot-var:
